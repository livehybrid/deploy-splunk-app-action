name: Splunk App CI/CD
description: A reusable GitHub Action for packaging, testing, and publishing Splunk apps.
author: Will Searle <splunk@livehybrid.com>

inputs:
  python-version:
    description: Python version to use for the environment.
    required: false
    default: "3.9"
  included-tags:
    description: Comma-separated list of tags for appinspect scanning.
    required: true
    default: "cloud,private_victoria,future"
  splunkbase-username:
    description: Splunkbase username for AppInspect API.
    required: true
  splunkbase-password:
    description: Splunkbase password for AppInspect API.
    required: true
  github-token:
    description: secrets.GITHUB_TOKEN with permissions to write to checks endpoint.
    required: true

outputs:
  artifact-path:
    description: The path to the packaged Splunk app artifacts.
  reports-path:
    description: Path to quality reports generated.

jobs:
  package:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip

    - name: Setup Environment
      shell: bash
      run: |
        pip install splunk-add-on-ucc-framework

    - name: Determine Version
      id: version
      shell: bash
      run: |
        echo "Version is now calculated by ucc-gen"
        SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
        ref_type=${GITHUB_REF#refs/*/}
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
        else
          TAG_VERSION="1.0.0"
        fi
        VERSION_WITH_HASH="${TAG_VERSION}+${SHORT_COMMIT_HASH}"
        echo "VERSION_WITH_HASH=${VERSION_WITH_HASH}" >> $GITHUB_ENV

    - name: Generate app with ucc-gen
      uses: splunk/addonfactory-ucc-generator-action@v2.0.1
      with:
        version: ${{ env.VERSION_WITH_HASH }}

    - name: Generate Package tarball
      shell: bash
      run: |
        mkdir -p dist
        mv output/* output/app
        ucc-gen package -o dist --path output/app

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Convert Included Tags to Matrix Format
      id: convert-tags
      run: |
        matrix=$(echo "${{ inputs.included-tags }}" | jq -R 'split(",")')
        echo "::set-output name=matrix-tags::$matrix"
      shell: bash

appinspect:
  name: quality-appinspect-cli
  needs:
    - package
    - convert-tags
  runs-on: ubuntu-latest
  strategy:
    fail-fast: false
    matrix:
      tags: ${{ fromJson(needs.convert-tags.outputs.matrix-tags) }}
  steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    - name: Scan
      uses: splunk/appinspect-cli-action@v2.8.1
      with:
        app_path: dist/
        included_tags: ${{ matrix.tags }}
        result_file: appinspect_result_${{ matrix.tags }}.json

    - name: Run Generate Markdown Action
      uses: livehybrid/generate-appinspect-markdown-action@main
      with:
        json_file: appinspect_result_${{ matrix.tags }}.json
        tag: "${{ matrix.tags }}"
        github_token: ${{ inputs.github-token }}
        include_not_applicable: False

quality-appinspect-api:
  name: quality-appinspect-api
  needs:
    - appinspect
  runs-on: ubuntu-latest
  steps:
    - name: Run AppInspect API
      uses: splunk/appinspect-api-action@v3.0
      with:
        username: "${{ inputs.splunkbase-username }}"
        password: "${{ inputs.splunkbase-password }}"
        app_path: dist
        included_tags: private_victoria
        excluded_tags: offensive

    - name: Upload Reports
      uses: actions/upload-artifact@v4
      with:
        name: reports
        path: reports/
